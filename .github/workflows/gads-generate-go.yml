name: GADS Generate GO

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "target commit (commit hash, branch name, tag)"
        required: false
        default: ""
        type: string

jobs:
  gads-generate-go:
    name: "GADS Generate GO"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Setup Directories
        run: |
          mkdir -p /tmp/src/cloud.google.com/go
          mkdir -p /tmp/src/googleapis

      - name: Setup genbot and remove bypass
        working-directory: "/tmp/src/cloud.google.com/go"
        run: |
          git clone https://github.com/googleapis/google-cloud-go.git .
          # rename google's gads bypass to bypass the bypass
          # https://github.com/googleapis/google-cloud-go/blob/feb6b0a8b771875a55c75fa959e19f6f12079030/internal/gapicgen/generator/genproto.go#L80
          grep -rl 'google.golang.org/genproto/googleapis/ads' ./internal/gapicgen/generator | xargs sed --in-place=backup 's,google.golang.org/genproto/googleapis/ads,google.golang.org/genproto/googleapis/ads_disabled,g'
          # output the genproto version used
          GENPROTO=$(grep "google.golang.org/genproto" go.mod | cut -d" " -f2)
          echo "::notice title=google.golang.org/genproto::$GENPROTO"

        # Only needed because we need to fix it; else we could let genbot pull it automatically.
      - name: Setup googleapis and fix ARM filenames
        working-directory: "/tmp/src/googleapis"
        run: |
          git clone https://github.com/googleapis/googleapis.git .
          # fixing golang _arm.proto filename conflicts https://groups.google.com/g/adwords-api/c/Tti9vvDPdK4/m/6a86kM18AAAJ
          cd google
          find . -name '*_arm.proto' -exec sh -c 'mv "$0" "${0%_arm.proto}_arm0.proto" && grep -rl "$(basename $0)" . | xargs sed --in-place=backup "s,_arm.proto,_arm0.proto,g"' {} \;

      - name: Checkout genproto
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - name: Generate GO
        working-directory: "/tmp/src/cloud.google.com/go/internal/gapicgen"
        run: |
          # https://pkg.go.dev/cloud.google.com/go/internal/gapicgen/cmd/genbot
          DOCKERFILE=cmd/genbot/Dockerfile
          # Lookup WORKDIR in case google changes it again
          WORKDIR=$(grep "WORKDIR" $DOCKERFILE | tail -n 1 | cut -d" " -f2)
          # Bypass git directory security due to repo being cloned out here and mounted.
          sed --in-place=backup "s,CMD,RUN git config --global --add safe.directory $WORKDIR\nCMD,g" $DOCKERFILE
          docker build -t genbot -f $DOCKERFILE .
          docker run --rm \
            -v `pwd`/../..:$WORKDIR \
            -v /tmp/src/googleapis:/googleapis \
            -v $GITHUB_WORKSPACE:/genproto \
            -e GENBOT_LOCAL_MODE=true \
            -e GENBOT_FORCE_ALL=true \
            -e GOCLOUD_DIR=$WORKDIR \
            -e GOOGLEAPIS_DIR=/googleapis \
            -e GENPROTO_DIR=/genproto \
            -e GAPIC_TO_GENERATE=google.golang.org/google/ads/googleads \
            genbot

      - name: Create PR
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git config --global push.autoSetupRemote true
          REF=$(git rev-parse --short HEAD)
          git checkout -b "gads-update-$REF"
          git add googleapis/ads/googleads
          git commit -m "chore(gads): auto-regenerate ($REF) by ${{ github.actor }}"
          git push
          gh pr create --title 'chore(gads): auto-regenerate ($REF) by ${{ github.actor }}' --body "Created by ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
